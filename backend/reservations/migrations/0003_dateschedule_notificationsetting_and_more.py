# Generated by Django 4.2.22 on 2025-06-09 14:33

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('reservations', '0002_salon_business_days_salon_business_hours_schedule'),
    ]

    operations = [
        migrations.CreateModel(
            name='DateSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='日付')),
                ('is_closed', models.BooleanField(default=False, verbose_name='休業日')),
                ('opening_time', models.TimeField(blank=True, null=True, verbose_name='開店時間')),
                ('closing_time', models.TimeField(blank=True, null=True, verbose_name='閉店時間')),
            ],
            options={
                'verbose_name': '特別スケジュール',
                'verbose_name_plural': '特別スケジュール',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='NotificationSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unconfirmed_reminder_enabled', models.BooleanField(default=True, verbose_name='【管理者向け】予約未確定リマインダーを有効にする')),
                ('unconfirmed_reminder_days_before', models.IntegerField(default=2, help_text='予約日の何日前に管理者にリマインドを送信するか設定します（1〜14日）。', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(14)], verbose_name='リマインド日数（X日前に通知）')),
                ('schedule_reminder_enabled', models.BooleanField(default=False, verbose_name='【管理者向け】スケジュールリマインダーを有効にする')),
                ('schedule_reminder_days_before', models.IntegerField(default=1, help_text='何日後までの予約状況をリマインドするか設定します（1〜7日）。', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)], verbose_name='リマインド日数（X日前に通知）')),
            ],
            options={
                'verbose_name': '通知設定',
                'verbose_name_plural': '通知設定',
            },
        ),
        migrations.CreateModel(
            name='WeeklyDefaultSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, '月曜日'), (1, '火曜日'), (2, '水曜日'), (3, '木曜日'), (4, '金曜日'), (5, '土曜日'), (6, '日曜日')], verbose_name='曜日')),
                ('is_closed', models.BooleanField(default=False, verbose_name='休業日')),
                ('opening_time', models.TimeField(blank=True, null=True, verbose_name='開店時間')),
                ('closing_time', models.TimeField(blank=True, null=True, verbose_name='閉店時間')),
            ],
            options={
                'verbose_name': '基本スケジュール',
                'verbose_name_plural': '基本スケジュール',
                'ordering': ['day_of_week'],
            },
        ),
        migrations.RemoveField(
            model_name='salon',
            name='business_days',
        ),
        migrations.RemoveField(
            model_name='salon',
            name='business_hours',
        ),
        migrations.AddField(
            model_name='salon',
            name='cancellation_deadline_days',
            field=models.IntegerField(default=2, help_text='予約日の何日前までお客様自身でのキャンセルを許可するか設定します。0を指定すると当日まで可能です。', validators=[django.core.validators.MinValueValidator(0)], verbose_name='キャンセル受付期限（日数）'),
        ),
        migrations.AlterField(
            model_name='service',
            name='duration_minutes',
            field=models.IntegerField(choices=[(30, '30 分'), (60, '60 分'), (90, '90 分'), (120, '120 分'), (150, '150 分'), (180, '180 分'), (210, '210 分'), (240, '240 分')], verbose_name='所要時間(分)'),
        ),
        migrations.DeleteModel(
            name='Schedule',
        ),
        migrations.AddField(
            model_name='weeklydefaultschedule',
            name='salon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_schedules', to='reservations.salon', verbose_name='サロン'),
        ),
        migrations.AddField(
            model_name='dateschedule',
            name='salon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='date_schedules', to='reservations.salon', verbose_name='サロン'),
        ),
        migrations.AlterUniqueTogether(
            name='weeklydefaultschedule',
            unique_together={('salon', 'day_of_week')},
        ),
    ]
